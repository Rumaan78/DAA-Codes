#include <stdio.h>
int main() {
    int n, m;
    printf("Enter the number of vertices: ");
    scanf("%d", &n);
    int graph[n][n], colors[n], stack[n][2], top = -1, solutionFound = 0;
    printf("Enter the adjacency matrix:\n");
    for (int i = 0; i < n; i++) for (int j = 0; j < n; j++) scanf("%d", &graph[i][j]);
    printf("Enter the number of colors: ");
    scanf("%d", &m);
    for (int i = 0; i < n; i++) colors[i] = 0;
    stack[++top][0] = 0;
    stack[top][1] = 1;
    while (top >= 0) {
        int vertex = stack[top][0], color = stack[top--][1], safe = 1;
        if (color > m) continue;
        for (int i = 0; i < n; i++) {
            if (graph[vertex][i] && colors[i] == color) {
                safe = 0;
                break;
            }
        }
        if (safe) {
            colors[vertex] = color;
            if (vertex == n - 1) {
                solutionFound = 1;
                break;
            }
            stack[++top][0] = vertex + 1;
            stack[top][1] = 1;
        } else {
            stack[++top][0] = vertex;
            stack[top][1] = color + 1;
        }
    }
    if (solutionFound) {
        printf("Solution exists: Following are the assigned colors:\n");
        for (int i = 0; i < n; i++) printf("Vertex %d -> Color %d\n", i, colors[i]);
    } else {
        printf("No solution exists\n");
    }
    return 0;
}
