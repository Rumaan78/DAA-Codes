#include <stdio.h>
#define MAX_VERTICES 10
int graph[MAX_VERTICES][MAX_VERTICES];
int path[MAX_VERTICES];
void printSolution(int V) {
    printf("Hamiltonian Circuit found:\n");
    for (int i = 0; i < V; i++) {
        printf("%d ", path[i] + 1); 
    }
    printf("%d\n", path[0] + 1); 
}
int isSafe(int v, int pos) {
    if (graph[path[pos - 1]][v] == 0)
        return 0;
    for (int i = 0; i < pos; i++) {
        if (path[i] == v)
            return 0;
    }

    return 1;
}
int hamiltonianCircuit(int pos, int V) {
    if (pos == V) {
        if (graph[path[pos - 1]][path[0]] == 1) {
            printSolution(V);
            return 1;
        } else {
            return 0;
        }
    }
    for (int v = 1; v < V; v++) {
        if (isSafe(v, pos)) {
            path[pos] = v;
            if (hamiltonianCircuit(pos + 1, V))
                return 1;
            path[pos] = -1;
        }
    }
    return 0;
}
int main() {
    int V;
    printf("Enter number of vertices (max %d): ", MAX_VERTICES);
    scanf("%d", &V);
    if (V <= 0 || V > MAX_VERTICES) {
        printf("Invalid number of vertices. Please enter a number between 1 and %d.\n", MAX_VERTICES);
        return 1;
    }
    printf("Enter adjacency matrix for the graph (%d x %d):\n", V, V);
    for (int i = 0; i < V; i++) {
        for (int j = 0; j < V; j++) {
            scanf("%d", &graph[i][j]);
        }
    }
    for (int i = 0; i < V; i++) {
        path[i] = -1;
    }
    path[0] = 0;
    if (!hamiltonianCircuit(1, V)) {
        printf("Hamiltonian Circuit does not exist\n");
    }
    return 0;
}
